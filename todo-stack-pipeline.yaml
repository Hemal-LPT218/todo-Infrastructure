AWSTemplateFormatVersion: "2010-09-09"
Description: CodePipeline for CloudFormation Root + Nested Stacks Deployment

## Stack Parameters ##
Parameters:
  GitHubRepo:
    Type: String
    Default: todo-Infrastructure
    Description: GitHub repository name (e.g. todo-Infrastructure)
  GitHubOwner:
    Type: String
    Default: Hemal-LPT218
    Description: GitHub username or org (e.g. Hemal-LPT218)
  GitHubBranch:
    Type: String
    Default: main
    Description: Branch to use
  CodeStarConnectionArn:
    Type: String
    Default: arn:aws:codeconnections:ap-south-1:730335183789:connection/e1b46677-0885-4a3c-9df2-5a6caefb6acb
    Description: ARN of CodeStar connection for GitHub (create beforehand in AWS Console)
  RootStackName:
    Type: String
    Default: todo-stack
    Description: CloudFormation root stack name
  RootTemplateFile:
    Type: String
    Default: todo-root.yaml
    Description: Root CloudFormation template file name
  ConfigurationFile:
    Type: String
    Default: parameters.json
    Description: Configuration file name
  PipelineArtifactBucket:
    Type: String
    Default: codepipeline-us-east-1-f3de767da42b-4a7e-bd92-34e343e25504
    Description: S3 bucket for CodePipeline artifacts
  NestedStackTemplateBucket:
    Type: String
    Default: cloud-formation-tamplate-for-todo-app
    Description: S3 bucket for nested stack templates

## Stack Resources ##
Resources:
  ## Role for CodePipeline ##
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
      Policies:
        - PolicyName: AllowUseCodeStarConnection
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: !Ref CodeStarConnectionArn
        - PolicyName: AllowS3Artifacts
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                Resource:
                  - !Sub arn:aws:s3:::${PipelineArtifactBucket}
                  - !Sub arn:aws:s3:::${PipelineArtifactBucket}/*
                  - !Sub arn:aws:s3:::${NestedStackTemplateBucket}
                  - !Sub arn:aws:s3:::${NestedStackTemplateBucket}/*
        - PolicyName: AllowPassDeployRole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: iam:PassRole
                Resource: !GetAtt CloudFormationDeployRole.Arn
        - PolicyName: AllowCloudFormationActions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeStackEvents
                  - cloudformation:GetTemplate
                  - cloudformation:ValidateTemplate
                Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${RootStackName}/*

  CloudFormationDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        # Allows CloudFormation to create/update/delete stacks
        - arn:aws:iam::aws:policy/AdministratorAccess

  ## Pipeline Resources ##
  CloudFormationPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub_Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                ConnectionArn: !Ref CodeStarConnectionArn
                FullRepositoryId: !Sub "${GitHubOwner}/${GitHubRepo}"
                BranchName: !Ref GitHubBranch
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: DeployToS3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                BucketName: !Ref NestedStackTemplateBucket
                Extract: true

            - Name: CloudFormation_Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Ref RootStackName
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                TemplatePath: !Sub "SourceOutput::${RootTemplateFile}"
                RoleArn: !GetAtt CloudFormationDeployRole.Arn
                TemplateConfiguration: "SourceOutput::parameters.json"
              RunOrder: 2

## Stack Outputs ##
Outputs:
  CodePipelineName:
    Description: "CodePipeline Name"
    Value: !Ref CloudFormationPipeline

  CodePipelineURL:
    Description: "CodePipeline URL"
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/codesuite/codepipeline/pipelines/${CloudFormationPipeline}/view?region=${AWS::Region}"
