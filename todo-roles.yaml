AWSTemplateFormatVersion: 2010-09-09
Description: Stack for AMI roles

## Stack Parameters ##
Parameters:
  ConnectionArn:
    Type: String
    Description: ARN of the CodeStar connection
  CodePipelineBucket:
    Type: String
    Description: S3 bucket for CodePipeline
  DBCredentialsSecret:
    Type: String
    Description: Secret name for DB credentials
  AppName:
    Type: String
    Description: Application name
  Environment:
    Type: String
    Description: Deployment environment (e.g., dev, staging, prod)
    AllowedValues:
      - dev
      - staging
      - prod

## Stack Resources ##
Resources:
  ## Roles for Backend ##
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-${Environment}-codepipeline-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
      Policies:
        - PolicyName: !Sub "${AppName}-${Environment}-codepipeline-inline"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: !Ref ConnectionArn
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource: !Sub "arn:aws:s3:::${CodePipelineBucket}/*"
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/*"
              - Effect: Allow
                Action:
                  - codedeploy:GetApplication
                  - codedeploy:CreateDeployment
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:GetApplicationRevision
                  - codedeploy:RegisterApplicationRevision
                Resource:
                  - !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:*"
                  - !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:*/*"
                  - !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:*"
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-codepipeline-role"
        - Key: Application
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref Environment

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-${Environment}-codebuild-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
      Policies:
        - PolicyName: !Sub "${AppName}-${Environment}-codebuild-inline"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource: !Sub "arn:aws:s3:::${CodePipelineBucket}/*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-codebuild-role"
        - Key: Application
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref Environment

  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-${Environment}-codedeploy-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      Policies:
        - PolicyName: !Sub "${AppName}-${Environment}-codedeploy-s3"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: !Sub "arn:aws:s3:::${CodePipelineBucket}/*"
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource: !Sub "arn:aws:s3:::${CodePipelineBucket}"
        - PolicyName: !Sub "${AppName}-${Environment}-codedeploy-elb"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - elasticloadbalancing:DeregisterTargets
                  - elasticloadbalancing:RegisterTargets
                  - elasticloadbalancing:DescribeTargetGroups
                  - elasticloadbalancing:DescribeListeners
                  - elasticloadbalancing:DescribeRules
                  - elasticloadbalancing:ModifyListener
                  - elasticloadbalancing:DescribeTargetHealth
                Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-codedeploy-role"
        - Key: Application
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref Environment

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-${Environment}-ec2-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
      Policies:
        - PolicyName: !Sub "${AppName}-${Environment}-ec2-cloudwatch"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: "*"
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Ref DBCredentialsSecret
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-ec2-role"
        - Key: Application
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref Environment

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub "${AppName}-${Environment}-ec2-profile"
      Path: /
      Roles:
        - !Ref InstanceRole

  ## Frontend CodePipeline Role ##
  FrontendCodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-${Environment}-frontend-codepipeline-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
        - PolicyName: !Sub "${AppName}-${Environment}-frontend-pipeline-inline"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: !Ref ConnectionArn
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/*"
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-frontend-codepipeline-role"
        - Key: Application
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref Environment

  FrontendCodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-${Environment}-frontend-codebuild-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
      Policies:
        - PolicyName: !Sub "${AppName}-${Environment}-frontend-codebuild-inline"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:log-group:/aws/codebuild/*
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${CodePipelineBucket}
                  - !Sub arn:aws:s3:::${CodePipelineBucket}/*
              - Effect: Allow
                Action: ssm:GetParameters
                Resource: "*"
              - Sid: CloudFrontInvalidation
                Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
                Resource: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/*"
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-frontend-codebuild-role"
        - Key: Application
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref Environment

## Stack Outputs ##
Outputs:
  CodePipelineRoleArn:
    Value: !GetAtt CodePipelineRole.Arn
    Description: CodePipeline role ARN
  CodeBuildRoleArn:
    Value: !GetAtt CodeBuildRole.Arn
    Description: CodeBuild role ARN
  CodeDeployRoleArn:
    Value: !GetAtt CodeDeployRole.Arn
    Description: CodeDeploy role ARN
  InstanceProfileArn:
    Value: !GetAtt InstanceProfile.Arn
    Description: Instance profile ARN
  FrontendCodePipelineServiceRoleArn:
    Value: !GetAtt FrontendCodePipelineServiceRole.Arn
    Description: Frontend CodePipeline role ARN
  FrontendCodeBuildServiceRoleArn:
    Value: !GetAtt FrontendCodeBuildServiceRole.Arn
    Description: Frontend CodeBuild role ARN
